# Mt Baker
# Prepare all images
# 
# This notebook reorganizes/moves all the photos generated in the previous two notebooks. Two metashape CSV files
# are also generated, they are both generated by combining the separate versions generated for the EE and NAGAP 
# images in the previous two notebooks. 

import os
import shutil
import pandas as pd
import glob

# %%
# Required inputs:
main_directory = '/data2/elilouis/timesift/baker-ee-many/'
ee_image_datasets_directory = '/data2/elilouis/timesift/baker-ee-many/all-ee-downloads/input_data'
EE_PIXEL_PITCH_VALUE = 0.025
# Specify EE image datasets I want to use. Select these by examining the results of the baker_ee_preprocess_datasets.py notebook.
path_tuples = [
    ('EE_1947', '09', '14'),
    ('EE_1950', '09', '02'),
    ('EE_1972', '08', '10'),
    ('EE_1979', '09', '14')
]
 
# %%
# Create paths from the tuples
ee_dataset_paths = [
    os.path.join(ee_image_datasets_directory, *tup) for tup in path_tuples
]

# %%
# Copy preprocessed/cropped images into a directory with the NAGAP images
for path in ee_dataset_paths:
    shutil.copytree(
        os.path.join(path, 'cropped_images'),
        os.path.join(main_directory, 'preprocessed_images'), 
        dirs_exist_ok=True    
    )

# %%
# Create a combined image_metadata.csv and combined metashape_metadata.csv file for all the EE images
# First create a DF with all the info in it, then split into 2 dataframes and save to CSVs
ee_image_metadata_df = pd.DataFrame()
ee_metashape_metadata_df = pd.DataFrame()
for path in ee_dataset_paths:
    for metadata_csv in glob.glob(os.path.join(path, '**/**/metashape_metadata.csv')):
        [year, month, day] = path.split('/')[-3:]
        year = year.replace('EE_', '')[2:]
        print([year, month, day])

        #create metashape_metadata for this dataset
        new_metashape_metadata_df = pd.read_csv(metadata_csv)
        new_metashape_metadata_df['pixel_pitch'] = EE_PIXEL_PITCH_VALUE

        #create image_metadata for this dataset
        new_image_metadata_df = new_metashape_metadata_df[['image_file_name']].copy()
        new_image_metadata_df = new_image_metadata_df.rename({'image_file_name': 'fileName'}, axis=1)
        new_image_metadata_df['fileName'] = new_image_metadata_df['fileName'].apply(
            lambda x: x.replace('.tif', '')
        )
        new_image_metadata_df['Year'] = year
        new_image_metadata_df['Month'] = month
        new_image_metadata_df['Day'] = day

        ee_metashape_metadata_df = pd.concat([ee_metashape_metadata_df, new_metashape_metadata_df])
        ee_image_metadata_df = pd.concat([ee_image_metadata_df, new_image_metadata_df])

ee_image_metadata_df.to_csv(os.path.join(main_directory, 'ee_image_metadata.csv'), index=False)
ee_metashape_metadata_df.to_csv(os.path.join(main_directory, 'ee_metashape_metadata.csv'), index=False)


# %%
# Combine EE and NAGAP image_metadata and metashape_metadata csv files
ee_image_metadata_df = pd.read_csv(os.path.join(main_directory, 'ee_image_metadata.csv'))
ee_metashape_metadata_df = pd.read_csv(os.path.join(main_directory, 'ee_metashape_metadata.csv'))
nagap_image_metadata_df = pd.read_csv(os.path.join(main_directory, 'image_metadata.csv'))
nagap_metashape_metadata_df = pd.read_csv(os.path.join(main_directory, 'metashape_metadata.csv'))

combined_image_metadata_df = pd.concat([ee_image_metadata_df, nagap_image_metadata_df])
combined_metashape_metadata_df = pd.concat([ee_metashape_metadata_df, nagap_metashape_metadata_df])

combined_image_metadata_df.to_csv(
    os.path.join(main_directory, 'combined_image_metadata.csv'),
    index=False
)
combined_metashape_metadata_df.to_csv(
    os.path.join(main_directory, 'combined_metashape_metadata.csv'),
    index=False
)
# %%
